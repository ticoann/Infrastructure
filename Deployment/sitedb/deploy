# vim: set ft=sh sw=2 ts=8 et :
deploy_sitedb_variants="default legacy prod preprod dev"
deploy_sitedb_deps()
{
  deploy backend
  deploy wmcore-auth
}

deploy_sitedb_prep()
{
  mkproj
}

deploy_sitedb_sw()
{
  case $variant in
    default )
      deploy_pkg -a sitedb/SiteDBAuth.py comp cms+sitedb 2.0.0-comp ;;
    * )
      deploy_pkg -a sitedb/sitedb.ini -a sitedb/security.ini -a sitedb/SiteDBAuth.py \
        comp cms+sitedb 2.0.0-comp ;;
  esac
}

deploy_sitedb_post()
{
  case $host in vocms13[89] | vocms140 ) disable ;; * ) enable ;; esac
  (mkcrontab; sysboot
   case $host in vocms106 | vocms161 )
     echo "3 * * * * $project_config/HNSync";;
   esac) | crontab -
}

deploy_sitedb_auth()
{
  case $1 in
    */security.ini )
      echo "[database]"
      echo "dbtype = oracle"
      echo "dbname = oracle://FOO:BAR@ZOINKS"
      ;;

    */sitedb.ini )
      local certs
      if [ -r $root/certs/hostcert.pem ]; then
        certs=$root/certs
      elif [ -r /data/certs/hostcert.pem ]; then
        certs=/data/certs
      else
        note "ERROR: cannot find hostcert to use for legacy server"
        exit 1
      fi

      echo "[endpoint]"
      echo "phedex = http://cmsweb.cern.ch/phedex/prod/Request::Create?dest="
      echo "dbs = https://cmsweb.cern.ch/dbs_discovery_old/getData?dbsInst=cms_dbs_prod_global&proc=&ajax=0&userMode=user&group=*&tier=*&app=*&site="
      echo "goc = https://goc.gridops.org/site/list?id="
      echo "gstat = http://goc.grid.sinica.edu.tw/gstat"
      echo "dashboard = http://lxarda16.cern.ch/dashboard/request.py"
      echo "squid = http://frontier.cern.ch/squidstats/mrtgcms"
      echo "sam = https://lcg-sam.cern.ch:8443/sam/sam.py?"
      echo "[security]"
      echo "cert = $certs/hostcert.pem"
      echo "key = $certs/hostkey.pem"
      echo "[setup]"
      case $variant in
        prod )
	  echo "basepath = https://cmsweb.cern.ch/sitedb" ;;
        preprod )
	  echo "basepath = https://cmsweb-testbed.cern.ch/sitedb" ;;
        dev )
          echo "basepath = https://cmsweb-dev.cern.ch/sitedb" ;;
        * )
          echo "basepath = https://$(hostname -f)/sitedb" ;;
      esac
      ;;

    */SiteDBAuth.py)
      cat <<- \EOF
	import cx_Oracle as DB
	import socket

	fqdn = socket.getfqdn().lower()
	def pool(user, password, database, min, max, increment, timeout):
	  p = DB.SessionPool(user, password, database, min, max, increment)
	  p.timeout = timeout
	  return p

	def dbparam(nthreads):
	  return { 'prod':
		   { 'GET':
		     { 'type': DB,
		       'trace': False,
		       'schema': "cms_sitedb",
		       'clientid': "sitedb-web@%s" % fqdn,
		       'liveness': "select sysdate from dual",
		       'pool': pool(user = "cms_sitedb_reader_fixme",
			            password = "FIXME",
			            database = "cms_sitedb",
			            min = min(1, nthreads),
			            max = 2 + nthreads,
			            increment = 2,
			            timeout = 300) },

		     '*':
		     { 'type': DB,
		       'trace': False,
		       'schema': "cms_sitedb",
		       'clientid': "sitedb-web@%s" % fqdn,
		       'liveness': "select sysdate from dual",
		       'pool': pool(user = "cms_sitedb_writer_fixme",
			            password = "FIXME",
			            database = "cms_sitedb",
			            min = min(1, nthreads),
			            max = nthreads,
			            increment = 1,
			            timeout = 60) } },

		   'dev':
		   { '*':
		     { 'type': DB,
		       'trace': False,
		       'schema': "cms_sitedb",
		       'clientid': "sitedb-web@%s" % fqdn,
		       'liveness': "select sysdate from dual",
		       'pool': pool(user = "cms_sitedb_dev_fixme",
			            password = "FIXME",
			            database = "cms_sitedb",
			            min = min(1, nthreads),
			            max = 2 + nthreads,
			            increment = 1,
			            timeout = 60) }
		   }
	       }
EOF
    ;;
  esac
}
