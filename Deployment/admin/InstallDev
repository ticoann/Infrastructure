#!/bin/sh

### Usage: InstallDev -h
### Usage: InstallDev [-d DIR] -s image -v VER -p PKGS [-r A=B] [-a AUTH]
### Usage: InstallDev [-d DIR] -s shutdown
### Usage: InstallDev [-d DIR] -s post[:HOST] -v VER -p PKGS
### Usage: InstallDev [-d DIR] -s status[:what]
### Usage: InstallDev [-d DIR] -s start[:what]
### Usage: InstallDev [-d DIR] -s stop[:what]

usage()
{
  perl -ne '/^### Usage:/ && do { s/^### ?//; print }' < $0
  exit 1
}

help()
{
  perl -ne '/^###/ && do { s/^### ?//; print }' < $0
  exit 0
}

STAGE= VER= REPO= ACFG= PKGS=
eval set -- $(getopt -n $0 -o hs:d:v:r:a:p: -- ${1+"$@"})
[ $? = 0 ] || usage
for arg; do
  case $arg in
    -d) cd "$2" || exit $?; shift; shift ;;
    -s) STAGE="$2"; shift; shift ;;
    -v) VER="$2"; shift; shift ;;
    -r) REPO="-r $2"; shift; shift ;;
    -a) ACFG="-p $2"; rm -f $2/auth/wmcore/header-auth-key*; shift; shift ;;
    -p) PKGS="$2"; shift; shift ;;
    -h) help ;;
    --) shift; break ;;
    -*) usage ;;
  esac
done

[ $# = 0 ] || usage
[ -d cfg/admin ] || usage
[ X"$STAGE" = X ] && usage

case $STAGE in
  status:* | start:* | stop:* | post:* )
    WHAT=${STAGE#*:} STAGE=${STAGE%:*} ;;
  post )
    WHAT=$(hostname -s) ;;
  status | start | stop )
    WHAT="*" ;;
esac

case $STAGE in
  image | post )
    [ X"$PKGS" = X ] && usage
    [ X"$VER" = X ] && usage
    ;;
esac

case $STAGE in
  image )
    set -ex
    $PWD/cfg/Deploy $ACFG -t $VER -a -s prep $PWD $PKGS
    sudo -H -u _sw $PWD/cfg/Deploy $ACFG $REPO -t $VER -a -s sw $PWD $PKGS
    $PWD/cfg/admin/ProxySeed -t dev -d $PWD/$VER/auth/proxy
    $PWD/cfg/Deploy $REPO -t $VER -a -s post $PWD $PKGS
    ;;

  shutdown )
    set -e
    for host in $(hostname -s); do
      (echo "exec 2>&1; set -x; hostname -f; cd $PWD"
       echo "crontab -r"
       echo "for x in /data/projects/*/config/manage; do"
       echo "  [ -f \$x ] || continue"
       echo "  u=_\$(echo \$x | cut -d/ -f4 | cut -d- -f1)"
       echo "  sudo -H -u \$u bashs -lc \"set -x; \$x stop 'I did read documentation'\""
       echo "done"
       echo "for x in enabled/*; do"
       echo "  [ -f \$x ] || continue"
       echo "  app=\${x#*/}; case \$app in frontend) u=root ;; * ) u=_\$app ;; esac"
       echo "  sudo -H -u \$u bashs -lc \"set -x; $PWD/current/config/\$app/manage stop 'I did read documentation'\""
       echo "done"
       echo "if [ -f /etc/init.d/httpd ]; then"
       echo "  sudo /sbin/service httpd stop"
       echo "fi"
       echo "killall python" # TOFIX: there might exist more cmsweb cronjobs running
                             # too (ProxyRenew, LogArchive, edg-mkgridmap and update-keys)
       # Kills back-end services cronjobs
       echo "ps f -A -o user:10,pid,%cpu,%mem,vsz,rss,tty,stat,start,time,args \\"
       echo "  --sort=uid,-ppid,pid | grep '^_' | awk '{print \$1, \$2}' |"
       echo "  while read user pid; do sudo -H -u \$user bashs -l -c \"kill \$pid\"; done"
       echo "exit 0") |
       ssh $host bashs -l
    done
    ;;

  post )
    set -ex
    $PWD/cfg/Deploy -H $WHAT $REPO -t $VER -a -s post $PWD $PKGS
    ;;

  start | status | stop )
    set -e
    for f in enabled/$WHAT; do
      app=${f#*/}; case $app in frontend) u=root ;; * ) u=_$app ;; esac
      (set -ex; sudo -H -u $u $PWD/current/config/$app/manage \
                   $STAGE 'I did read documentation')
    done
    ;;

  * )
    echo "$STAGE: bad stage, try -h for help" 1>&2
    exit 1
    ;;
esac

exit 0
