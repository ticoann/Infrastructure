# vim: set ft=sh sw=2 ts=8 et :
deploy_dqmgui_variants="default bare"
deploy_dqmgui_deps()
{
  deploy backend
  deploy admin $variant
}

deploy_dqmgui_prep()
{
  extra=
  case $host in
    dqm-c2d07-* )
      extra="$extra /dqmdata/dqm/uploads"
      extra="$extra /dqmdata/dqm/agents"
      extra="$extra /dqmdata/dqm/repository/original"
      extra="$extra agents sessions"
      ;;

    * )
      for d in offline caf relval dev devtest; do
        extra="$extra $d $d/sessions $d/agents $d/data $d/uploads $d/zipped $project_logs/$d"
	for a in clean freezer ixmerge qcontrol vcontrol register stageout verify zip; do
	  extra="$extra $d/agents/$a"
	done
      done
      ;;
  esac
  mkproj $extra
  mkproxy
  $nogroups || chmod g+ws */data */zipped */agents/*
}

deploy_dqmgui_sw()
{
  deploy_pkg comp cms+dqmgui 6.1.1
}

deploy_dqmgui_post()
{
  case $host in vocms10[67] | vocms13[26] | vocms140 | vocms16[13] ) disable ;; * ) enable ;; esac
  case $variant in bare ) return ;; esac

  (mkcrontab; sysboot
   [ ! -f $root/enabled/$project ] || {
     cmd="$project_config/daily"
     $nogroups || cmd="sudo -H -u _dqmgui bashs -l -c '$cmd'"
     echo "17 2 * * * $cmd"
     case $host in vocms13[89] ) # castor stageout must run under cmsweb account
       echo "@reboot $project_config/manage xstart stageout 'I did read documentation'" ;;
     esac
   }) | crontab -

  case $host:$root in
    vocms138:/data/srv )
      klist -s # must have afs kerberos token
      (acrontab -l | { fgrep -v -e " $host $project_config/" || true; }
       echo "6 */3 * * * $host $project_config/manage -q xstart afs-sync 'I did read documentation'") | acrontab
      ;;
  esac

  # Trigger plugins and layouts rebuild if server is enabled.
  [ ! -f $root/enabled/$project ] || {
    cmd="$project_config/manage compile 'I did read documentation'"
    $nogroups || cmd="sudo -H -u _dqmgui bashs -l -c '$cmd'"
    eval "$cmd"
  }
}
